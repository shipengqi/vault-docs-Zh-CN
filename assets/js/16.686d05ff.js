(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{152:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.vaultproject.io/downloads.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载地址"),e("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(2),t._m(3),t._v(" "),e("p",[t._v("Vault 用作 client/server 应用程序。Vault server 是 Vault 架构中唯一与数据存储和后端交互的部分。通过 Vault CLI 完成的所有操作都通过 TLS 连接与服务器交互。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),e("p",[t._v("这是 Vault 开发服务器已经启动，不要关闭终端选项卡，打开一个新的选项卡，运行其他命令。")]),t._v(" "),t._m(7),t._v(" "),e("p",[t._v("dev server 运行后，先做下面三件事：")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),e("p",[t._v("现在 dev server 已经运行，开始读写我们第一个 Secret。")]),t._v(" "),e("p",[t._v("Vault 的核心特性之一就是安全读写任意的 secrets 。可以通过 CLI，但是也有一个完整的"),e("a",{attrs:{href:"https://www.vaultproject.io/api/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP API"),e("OutboundLink")],1),t._v("，可以通过编程的方式\n使用 Vault 做任何事情。")]),t._v(" "),e("p",[t._v("写入 Vault 的信息会被加密，然后再写入后端存储。对于 dev server，后端存储是在内存中，但是在生产环境下，应该是磁盘或者"),e("a",{attrs:{href:"https://www.consul.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul"),e("OutboundLink")],1),t._v("。\nVault 在将值传递给存储驱动程序之前对其进行加密。后端存储机制永远不会看到未加密的值，在没有 Vault 的情况下，也没有方法解密它。")]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),e("p",[e("code",[t._v("vault kv put")]),t._v("是一个非常强大的命令。除了直接从命令行写入数据外，它还可以从 "),e("code",[t._v("STDIN")]),t._v(" 以及文件中读取值和密钥对。\n更多信息，参阅"),e("a",{attrs:{href:"https://www.vaultproject.io/docs/commands/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令文档"),e("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),e("p",[t._v("Vault 从存储中获取数据并解密。")]),t._v(" "),t._m(22),t._v(" "),t._m(23),e("p",[t._v("也可以直接获取指定的字段：")]),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),e("p",[t._v("为了简单，Vault 提供的这些 secrets 引擎了类似于文件系统。一个 secrets 引擎启用在一个路径上。Vault 本身在传入请求上执行前缀路由，\n并根据启用的路径将请求路由到正确的 secrets 引擎。")]),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),e("p",[t._v("如果 secrets 引擎被禁用了，那么所有的 secrets 会被撤销，相应的 Vault 数据和配置会被删除。任何将数据路由到该路径的请求都会导致错误，\n但是现在该路径可以启用另一个 secrets 引擎了。")]),t._v(" "),e("p",[t._v("如果由于某种原因，Vault 无法删除数据或撤销租约，禁用操作将失败。如果发生这种情况，secrets 引擎将保持启用和可用，但是请求将返回一个错误。")]),t._v(" "),t._m(42),t._m(43),t._v(" "),e("p",[t._v("还可以将 secrets 引擎移动到新的路径。这仍然是一个破坏性的命令。所有配置数据都被保留，但是任何 secrets 都被撤销，因为 secrets 与引擎的路径紧密相连。")]),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),e("p",[t._v("这种抽象非常强大。它使 Vault 可以直接与物理系统、数据库、HSMs等进行交互。但是除了这些物理系统之外，Vault 还可以与更独特的环境进行交互，比如 AWS IAM，动态 SQL 用户创建，\n并且同时使用相同的读写接口。")]),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),e("p",[t._v("正如我们在前几节中所讨论的，不同的 secrets 引擎允许不同的行为。这个例子中，AWS secrets 引擎生成动态的、按需的 AWS 访问凭证。")]),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),e("p",[t._v("这些凭证现在存储在这个 AWS secrets 引擎中。在将来的请求中，引擎将在与 AWS 通信时使用这些凭证。")]),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),e("p",[t._v("例如，这里有一个支持 EC2 上所有操作的 IAM 策略。当 Vault 生成访问密钥时，它将自动附加此策略。生成的访问密钥访问 EC2 (由此策略决定)的所有权限，但不能访问 IAM 或其他 AWS 服务。")]),t._v(" "),t._m(57),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),e("p",[t._v("完成了!如果要登录到 AWS 帐户，会看到不存在 IAM 用户。如果尝试使用生成的访问键，会发现它们不再工作。")]),t._v(" "),e("p",[t._v("有了这样简单的动态创建和撤销，就可以开始看到使用 Dynamic Secrets 是多么容易，并确保它们只在需要的时间内存在。")]),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._v(" "),t._m(77),t._m(78),t._v(" "),t._m(79),t._v(" "),e("p",[t._v("身份验证是向 Vault 用户分配身份的机制。")]),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),e("p",[t._v("身份验证是验证用户或机器提供的信息并将其转换为匹配策略的 Vault token 的过程。理解 Vault 认证最简单的方法是将其与网站进行比较。")]),t._v(" "),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._v(" "),e("p",[t._v("可以创建更多 tokens：")]),t._v(" "),t._m(86),t._m(87),t._v(" "),t._m(88),t._v(" "),t._m(89),t._m(90),t._v(" "),e("p",[t._v("撤销创建好的 tokens：")]),t._v(" "),t._m(91),t._m(92),t._v(" "),e("p",[t._v("使用 root token 重新登录：")]),t._v(" "),t._m(93),t._m(94),t._v(" "),t._m(95),t._v(" "),t._m(96),t._v(" "),t._m(97),t._v(" "),t._m(98),t._v(" "),t._m(99),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._m(103),t._v(" "),t._m(104),t._v(" "),t._m(105),t._m(106),t._v(" "),t._m(107),t._v(" "),t._m(108),t._m(109),t._v(" "),t._m(110),t._m(111),t._v(" "),t._m(112),e("p",[t._v("根据帮助输出，使用 "),e("code",[t._v("vault login")]),t._v(" 命令对 GitHub 进行身份验证。输入你的\n"),e("a",{attrs:{href:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub personal access token"),e("OutboundLink")],1),t._v("，\nVault 将验证你的身份。")]),t._v(" "),t._m(113),t._m(114),t._v(" "),t._m(115),t._m(116),t._v(" "),t._m(117),t._m(118),t._v(" "),t._m(119),t._m(120),t._v(" "),t._m(121),t._v(" "),t._m(122),t._v(" "),t._m(123),t._v(" "),t._m(124),t._v(" "),t._m(125),t._v(" "),e("p",[t._v("策略是用 "),e("a",{attrs:{href:"https://github.com/hashicorp/hcl",target:"_blank",rel:"noopener noreferrer"}},[t._v("HCL"),e("OutboundLink")],1),t._v(" 编写的，但与 JSON 兼容。下面是一个策略示例:")]),t._v(" "),t._m(126),t._m(127),t._v(" "),e("p",[t._v("Vault 包含一个命令，它将根据规范自动格式化策略。它还会报告语法错误：")]),t._v(" "),t._m(128),e("p",[t._v("策略格式在 API 路径上使用前缀匹配系统来确定访问控制。使用最特定的策略，或者是精确匹配，或者是最长的前缀 glob 匹配。")]),t._v(" "),t._m(129),t._v(" "),t._m(130),t._v(" "),e("p",[t._v("使用命令行编写策略，要指定要上传的策略文件的路径：")]),t._v(" "),t._m(131),e("p",[t._v("下面是一个可以在终端复制粘贴的策略例子：")]),t._v(" "),t._m(132),e("p",[t._v("查看策略列表：")]),t._v(" "),t._m(133),e("p",[t._v("查看策略详情：")]),t._v(" "),t._m(134),t._m(135),t._v(" "),e("p",[t._v("要使用该策略，请创建一个令牌并将其分配给该策略：")]),t._v(" "),t._m(136),t._m(137),t._v(" "),t._m(138),t._v(" "),t._m(139),t._m(140),t._v(" "),t._m(141),t._m(142),t._v(" "),t._m(143),t._v(" "),t._m(144),t._v(" "),t._m(145),e("p",[t._v("对于 GitHub 来说，默认团队是默认的策略集，每个人都被分配到它所在的任何一个团队。")]),t._v(" "),t._m(146),t._v(" "),e("p",[t._v("部署生产环境下的 Vault。")]),t._v(" "),t._m(147),t._v(" "),e("p",[t._v("Vault 使用 "),e("a",{attrs:{href:"https://github.com/hashicorp/hcl",target:"_blank",rel:"noopener noreferrer"}},[t._v("HCL"),e("OutboundLink")],1),t._v(" 文件配置。Vault 的配置文件相对简单:")]),t._v(" "),t._m(148),e("p",[t._v("这里有两个主要的配置：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("storage")]),t._v(" - 这是 Vault 用来存储的物理后端。开发服务器使用了 "),e("code",[t._v("inmem")]),t._v(" (在内存中)，上面的例子使用了 "),e("a",{attrs:{href:"https://www.consul.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul"),e("OutboundLink")],1),t._v("，一个更易于生产的后端。")]),t._v(" "),t._m(149)]),t._v(" "),t._m(150),t._v(" "),e("p",[t._v("如何启动 Consul 实例，参考 "),e("a",{attrs:{href:"https://www.consul.io/intro/getting-started/install.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul Getting Started Guide"),e("OutboundLink")],1),t._v("，安装好以后使用下面的命令启动：")]),t._v(" "),t._m(151),t._m(152),t._v(" "),t._m(153),t._v(" "),t._m(154),t._m(155),t._v(" "),e("p",[t._v("你会注意到不能执行任何命令。我们没有任何授权信息!当第一次设置 Vault 服务器时，必须首先初始化它。")]),t._v(" "),e("p",[t._v("在 Linux 上，Vault 可能无法启动并报错:")]),t._v(" "),t._m(156),e("p",[t._v("这个问题参考 "),e("a",{attrs:{href:"https://www.vaultproject.io/docs/configuration/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Server Configuration"),e("OutboundLink")],1),t._v(" 中有关 "),e("code",[t._v("disable_mlock")]),t._v(" 的讨论。")]),t._v(" "),t._m(157),t._v(" "),e("p",[t._v("初始化是配置 Vault 的过程。只有当服务器针对以前从未在 Vault 中使用过的新后端启动时，才会出现这种情况。在 HA 模式下运行时，每个集群一次，\n而不是每个服务器一次。")]),t._v(" "),t._m(158),t._v(" "),t._m(159),e("p",[t._v("初始化输出两个非常重要的信息: "),e("code",[t._v("unseal keys")]),t._v(" 和 "),e("code",[t._v("root token")]),t._v("。\n保存所有的 "),e("code",[t._v("unseal keys")]),t._v(" 和 "),e("code",[t._v("root token")]),t._v("，在实际的部署场景中，永远不会将这些键保存在一起。相反，你可能会使用 Vault 的 "),e("code",[t._v("PGP")]),t._v(" 和 "),e("code",[t._v("Keybase.io")]),t._v(" 支持\n加密这些密钥与用户的 "),e("code",[t._v("PGP")]),t._v(" 密钥。这可以防止一个人拥有所有的解锁密钥。有关使用 PGP、GPG 和 Keybase 的详细信息，\n请参阅"),e("a",{attrs:{href:"https://www.vaultproject.io/docs/concepts/pgp-gpg-keybase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("有关文档"),e("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(160),t._v(" "),e("p",[t._v("每个初始化的 Vault 服务器都是在密封的状态下启动。从配置中，Vault 可以访问物理存储，但是它不能读取任何数据，因为它不知道如何解密它。教 Vault 如何解密数据的过程是已知的。")]),t._v(" "),t._m(161),t._v(" "),e("p",[t._v("开始解封 Vault：")]),t._v(" "),t._m(162),t._m(163),t._v(" "),t._m(164),t._v(" "),t._m(165),t._v(" "),t._m(166),t._m(167),t._v(" "),t._m(168),t._m(169),t._v(" "),t._m(170),t._m(171),t._v(" "),t._m(172),t._v(" "),e("p",[t._v("除了 CLI 之外，Vault 的所有功能都可以通过 HTTP API 访问。实际上，CLI的大多数调用实际上都调用HTTP API。在某些情况下，Vault 功能不能通过 CLI 访问，只能通过 HTTP API 访问。")]),t._v(" "),e("p",[t._v("启动 Vault 服务器后，可以使用 "),e("code",[t._v("curl")]),t._v(" 或任何其他 "),e("code",[t._v("http")]),t._v(" 客户端进行 API 调用。例如，如果在 "),e("a",{attrs:{href:"https://www.vaultproject.io/docs/concepts/dev-server.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("dev mode"),e("OutboundLink")],1),t._v(" 下\n启动 Vault 服务器，可以这样验证初始化状态：")]),t._v(" "),t._m(173),t._m(174),t._v(" "),e("p",[t._v("通过它的 REST API 访问在 Vault 中的信息。例如，如果机器使用 "),e("a",{attrs:{href:"https://www.vaultproject.io/docs/auth/approle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AppRole"),e("OutboundLink")],1),t._v(" 进行身份验证，Vault 首先对应用程序将\n进行身份验证，返回一个 "),e("code",[t._v("Vault API")]),t._v(" 令牌。应用程序将使用该令牌与 Vault 通信。")]),t._v(" "),t._m(175),t._v(" "),t._m(176),e("p",[t._v("启动：")]),t._v(" "),t._m(177),e("p",[t._v("至此，我们可以对所有交互使用 Vault API。例如，我们可以这样初始化 Vault:")]),t._v(" "),t._m(178),t._m(179),t._v(" "),t._m(180),t._v(" "),t._m(181),t._v(" "),t._m(182),e("p",[t._v("现在所有可用的 "),e("code",[t._v("auth")]),t._v(" 方法可以启用和配置了。这里使用 "),e("a",{attrs:{href:"https://www.vaultproject.io/docs/auth/approle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AppRole"),e("OutboundLink")],1),t._v(" 验证。\n开始启用 AppRole 验证")]),t._v(" "),t._m(183),t._m(184),t._v(" "),e("p",[t._v("现在，使用所需的 "),e("a",{attrs:{href:"https://www.vaultproject.io/docs/concepts/policies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ACL 策略集"),e("OutboundLink")],1),t._v("创建一个 AppRole。在下面的命令中，\n指定在 AppRole "),e("code",[t._v("my-role")]),t._v(" 下发布的令牌应该与 "),e("code",[t._v("dev-policy")]),t._v(" 和 "),e("code",[t._v("my-policy")]),t._v("相 关联：")]),t._v(" "),t._m(185),t._m(186),t._v(" "),t._m(187),t._m(188),t._v(" "),t._m(189),t._m(190),t._v(" "),t._m(191),t._m(192),t._v(" "),e("p",[t._v("新获得的令牌可以作为新的 VAULT 令牌导出，并使用它对 VAULT 请求进行身份验证。")]),t._v(" "),t._m(193),e("p",[t._v("更多 APIs 参考 "),e("a",{attrs:{href:"https://www.vaultproject.io/api/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP APIs 文档"),e("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(194),t._v(" "),e("p",[t._v("Vault 提供了一个用户交互界面。使用 Vault UI 可以轻松地创建、读取、更新和删除 secrets、进行身份验证、解封等等。")]),t._v(" "),t._m(195),t._v(" "),t._m(196),t._v(" "),e("p",[t._v("输入 root token 来登录。")]),t._v(" "),t._m(197),t._v(" "),t._m(198),t._v(" "),t._m(199),e("p",[t._v("Vault UI 运行的端口和 Vault server 相同。因此，必须配置至少一个监听的端口才能访问 Vault UI。")]),t._v(" "),e("p",[t._v("例如：")]),t._v(" "),t._m(200),t._m(201),t._v(" "),t._m(202),t._v(" "),e("p",[t._v("Vault UI 有一个内置的指南，可以指导你完成各种常见 Vault 特性的操作。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started","aria-hidden":"true"}},[this._v("#")]),this._v(" Getting Started")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://releases.hashicorp.com/vault/0.11.4/vault_0.11.4_linux_amd64.zip\n"),e("span",{attrs:{class:"token function"}},[t._v("mv")]),t._v(" ./vault_0.11.4_linux_amd64.zip /usr/local/program/\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 解压 得到一个二进制文件 vault")]),t._v("\nunzip vault_0.11.4_linux_amd64.zip\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 配置环境变量")]),t._v("\nvim /etc/profile\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 添加下面的内容 /usr/local/program 改成你自己的安装目录")]),t._v("\nVAULT_PATH"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/program\n"),e("span",{attrs:{class:"token function"}},[t._v("export")]),t._v(" PATH"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token variable"}},[t._v("$VAULT_PATH")]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),e("span",{attrs:{class:"token variable"}},[t._v("$PATH")]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 使环境变量生效")]),t._v("\n"),e("span",{attrs:{class:"token function"}},[t._v("source")]),t._v(" /etc/profile\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 验证 vault")]),t._v("\nvault\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 安装 子命令、标志和路径参数的命令行补全 自动安装 helper 到 ~/.bashrc")]),t._v("\nvault -autocomplete-install\n"),e("span",{attrs:{class:"token function"}},[t._v("exec")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$SHELL")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"启动-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-server","aria-hidden":"true"}},[this._v("#")]),this._v(" 启动 server")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"启动-vault-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-vault-server","aria-hidden":"true"}},[this._v("#")]),this._v(" 启动 Vault server")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("首先我们开启 Vault 的 "),s("code",[this._v("dev server")]),this._v("，dev server 是一个内置的、预先配置好的服务器，它不是很安全，但对于本地使用 Vault 非常有用。只能用于开发环境。\n运行：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault server -dev\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Vault server configuration:\n\n             Api Address: http://127.0.0.1:8200\n                     Cgo: disabled\n         Cluster Address: https://127.0.0.1:8201\n              Listener 1: tcp "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addr: "),e("span",{attrs:{class:"token string"}},[t._v('"127.0.0.1:8200"')]),t._v(", cluster address: "),e("span",{attrs:{class:"token string"}},[t._v('"127.0.0.1:8201"')]),t._v(", max_request_duration: "),e("span",{attrs:{class:"token string"}},[t._v('"1m30s"')]),t._v(", max_request_size: "),e("span",{attrs:{class:"token string"}},[t._v('"33554432"')]),t._v(", tls: "),e("span",{attrs:{class:"token string"}},[t._v('"disabled"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n               Log Level: "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not set"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                   Mlock: supported: true, enabled: "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n                 Storage: inmem\n                 Version: Vault v0.11.4\n             Version Sha: 612120e76de651ef669c9af5e77b27a749b0dba3\n\nWARNING"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" dev mode is enabled"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" In this mode, Vault runs entirely in-memory\nand starts unsealed with a single unseal key. The root token is already\nauthenticated to the CLI, so you can immediately begin using Vault.\n\nYou may need to "),e("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" the following environment variable:\n\n    $ "),e("span",{attrs:{class:"token function"}},[t._v("export")]),t._v(" VAULT_ADDR"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v("'http://127.0.0.1:8200'")]),t._v("\n\nThe unseal key and root token are displayed below "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" you want to\nseal/unseal the Vault or re-authenticate.\n\nUnseal Key: MG/XNYH+rCMgPE8QMIisDSRBmiNpzAmUI/Rj75RZ/XY"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\nRoot Token: 2oYMZEsFTi9bfeqKIcwwKMxP\n\nDevelopment mode should NOT be used "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" production installations"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Vault server started"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Log data will stream "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" below:\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("dev server 所有的数据都存储在内存（加密的），在没有 TLS 的 "),s("code",[this._v("localhost")]),this._v(" 上侦听，并自动解封并显示 "),s("code",[this._v("unseal key")]),this._v(" 和 "),s("code",[this._v("root access key")]),this._v("。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ol",[e("li",[t._v("打开一个新的终端会话。")]),t._v(" "),e("li",[t._v("复制并运行上面终端输出的命令 "),e("code",[t._v("export VAULT_ADDR='http://127.0.0.1:8200'")]),t._v("，这会配置 Vault 客户端与我们的 dev server 通信。")]),t._v(" "),e("li",[t._v("复制终端输出的 "),e("code",[t._v("Unseal Key")]),t._v("，保存到任意的地方。")]),t._v(" "),e("li",[t._v("复制终端输出的 "),e("code",[t._v("Root Token")]),t._v("，并设置到环境变量 "),e("code",[t._v('export VAULT_DEV_ROOT_TOKEN_ID="s.XmpNPoi9sRhYtdKHaQhkHP6x"')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"校验-server-是否运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#校验-server-是否运行","aria-hidden":"true"}},[this._v("#")]),this._v(" 校验 server 是否运行")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("打开新的终端，运行 "),s("code",[this._v("export VAULT_ADDR='http://127.0.0.1:8200'")]),this._v("：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token comment"}},[t._v("# 校验")]),t._v("\nvault status\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nKey             Value\n---             -----\nSeal Type       shamir\nInitialized     "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nSealed          "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nTotal Shares    1\nThreshold       1\nVersion         0.11.4\nCluster Name    vault-cluster-8ffc02c5\nCluster ID      6a450d7d-e4aa-b636-e338-619aff7c3626\nHA Enabled      "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果输出看起来不一样，特别是如果数字不同或 Vault 是 "),s("code",[this._v("sealed")]),this._v("，那么重新启动 dev server 并再次尝试。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第一个-secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一个-secret","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一个 Secret")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"写一个-secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写一个-secret","aria-hidden":"true"}},[this._v("#")]),this._v(" 写一个 Secret")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用"),s("code",[this._v("vault kv")]),this._v("命令写入：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault kv put secret/hello foo"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("world\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nKey              Value\n---              -----\ncreated_time     2019-02-04T19:53:22.730733Z\ndeletion_time    n/a\ndestroyed        "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nversion          1\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 写入多对")]),t._v("\nvault kv put secret/hello foo"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("world excited"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("yes\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("将一对值 "),e("code",[t._v("foo=world")]),t._v(" 写入路径 "),e("code",[t._v("secret/hello")]),t._v("。这个"),e("strong",[t._v("路径的前缀 "),e("code",[t._v("secret/")]),t._v(" 很重要")]),t._v("，否则这个示例将无法工作。"),e("code",[t._v("secret/")]),t._v(" 前缀是任意 secrets 可以读写的地方。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("但如果可能的话，使用文件更安全。通过 CLI 发送数据通常记录在 "),s("code",[this._v("shell")]),this._v(" 历史记录中。对于重要 secrets ，请使用文件。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"读取一个-secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读取一个-secret","aria-hidden":"true"}},[this._v("#")]),this._v(" 读取一个 Secret")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("vault get")]),this._v(" 读取：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault kv get secret/hello\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" Metadata "),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("\nKey              Value\n---              -----\ncreated_time     2018-10-31T06:05:53.226450737Z\ndeletion_time    n/a\ndestroyed        "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nversion          2\n\n"),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Data "),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\nKey        Value\n---        -----\nexcited    "),e("span",{attrs:{class:"token function"}},[t._v("yes")]),t._v("\nfoo        world\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("添加参数 "),s("code",[this._v("-format=json")]),this._v("，可以输出"),s("code",[this._v("json")]),this._v("格式：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault kv get -format"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("json secret/hello\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"request_id"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"3496c75c-9247-4d49-7ac4-8d821aa0bf43"')]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"lease_id"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('""')]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"lease_duration"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 0,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"renewable"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" false,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"data"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token string"}},[t._v('"data"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{attrs:{class:"token string"}},[t._v('"excited"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"yes"')]),t._v(",\n      "),e("span",{attrs:{class:"token string"}},[t._v('"foo"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),e("span",{attrs:{class:"token string"}},[t._v('"metadata"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{attrs:{class:"token string"}},[t._v('"created_time"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"2018-10-31T06:05:53.226450737Z"')]),t._v(",\n      "),e("span",{attrs:{class:"token string"}},[t._v('"deletion_time"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('""')]),t._v(",\n      "),e("span",{attrs:{class:"token string"}},[t._v('"destroyed"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" false,\n      "),e("span",{attrs:{class:"token string"}},[t._v('"version"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 2\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"warnings"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" null\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 可以结合 jq 使用")]),t._v("\nvault kv get -format"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("json secret/hello "),e("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq -r .data.data.excited\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),e("span",{attrs:{class:"token function"}},[t._v("yes")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("vault kv get -field"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("excited secret/hello\n\n"),s("span",{attrs:{class:"token comment"}},[this._v("# 输出")]),this._v("\n"),s("span",{attrs:{class:"token function"}},[this._v("yes")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"删除一个-secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除一个-secret","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除一个 Secret")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("vault delete")]),this._v("命令删除：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault kv delete secret/hello\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Data deleted "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("if it existed"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at: secret/hello\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"secrets-引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#secrets-引擎","aria-hidden":"true"}},[this._v("#")]),this._v(" Secrets 引擎")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们前面的读写操作。你应该注意到所有的请求都以 "),s("code",[this._v("secret/")]),this._v(" 开头。如果尝试使用不同的前缀，Vault 会返回一个错误:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault "),e("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" foo/bar a"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("b\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nError writing data to foo/bar: Error making API request.\n\nURL: PUT http://127.0.0.1:8200/v1/foo/bar\nCode: 404. Errors:\n\n* no handler "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" route "),e("span",{attrs:{class:"token string"}},[t._v("'foo/bar'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("同样的，"),s("code",[this._v("vault kv put foo/bar a=b")]),this._v(" 也会返回一个错误。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("路径前缀告诉 Vault 应该路由到哪个 secrets 引擎")]),this._v("。当请求到达 Vault 时，它使用最长的前缀匹配，匹配初始路径部分，然后将请求传递给相应的 secrets 引擎。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("默认情况下，Vault 在路径 "),s("code",[this._v("secret/")]),this._v(" 上启用了一个名为 "),s("code",[this._v("kv")]),this._v(" 的 secrets 引擎。"),s("code",[this._v("kv")]),this._v(" secrets 引擎将原始数据读写到后端存储。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("Vault 除了 "),e("code",[t._v("kv")]),t._v(" 还支持多种 secrets 引擎，这个特性使 Vault 变得灵活。例如，"),e("code",[t._v("aws")]),t._v(" secrets 引擎需要生成 "),e("code",[t._v("aws IAM access keys")]),t._v(" 。\n"),e("code",[t._v("database")]),t._v(" secrets 引擎生成按需的、有时间限制的数据库凭证。这只是一些可用的 secrets 引擎的例子。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"启用一个-secrets-引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启用一个-secrets-引擎","aria-hidden":"true"}},[this._v("#")]),this._v(" 启用一个 secrets 引擎")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们启用一个 "),e("code",[t._v("kv")]),t._v("  secrets 引擎在一个不同的路径上，像文件系统一样，我们可以在多个不同的路径上启用一个 secrets 引擎。\n每个路径都是完全隔离的，不能与其他路径通信。例如，在 "),e("code",[t._v("foo")]),t._v(" 路径上的"),e("code",[t._v("kv")]),t._v(" secrets 引擎,不能和在 "),e("code",[t._v("bar")]),t._v(" 路径上的"),e("code",[t._v("kv")]),t._v(" secrets 引擎通信。\n启用：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault secrets "),e("span",{attrs:{class:"token function"}},[t._v("enable")]),t._v(" -path"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("kv kv\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Enabled the kv secrets engine at: kv/\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("在 "),e("code",[t._v("kv/")]),t._v(" 路径上启用了"),e("code",[t._v("kv")]),t._v(" secrets 引擎。"),e("strong",[t._v("启用 secrets 引擎的路径默认是 secrets 引擎的名称")]),t._v("。也就是说 "),e("code",[t._v("vault secrets enable kv")]),t._v(" 和上面的命令\n是一样的效果。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("查看是否操作成功，获取 secrets 引擎更多信息，使用 "),s("code",[this._v("vault secrets list")]),this._v(" 命令：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("vault secrets list\n\n"),s("span",{attrs:{class:"token comment"}},[this._v("# 输出 n/a 表示没有描述")]),this._v("\nPath          Type         Accessor              Description\n----          ----         --------              -----------\ncubbyhole/    cubbyhole    cubbyhole_acf26a2e    per-token private secret storage\nidentity/     identity     identity_3cdd7b91     identity store\nkv/           kv           kv_457c99be           n/a\nsecret/       kv           kv_548de4c3           key/value secret storage\nsys/          system       system_6ab143cf       system endpoints used "),s("span",{attrs:{class:"token keyword"}},[this._v("for")]),this._v(" control, policy and debugging\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"禁用一个-secrets-引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#禁用一个-secrets-引擎","aria-hidden":"true"}},[this._v("#")]),this._v(" 禁用一个 secrets 引擎")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("vault secrets disable kv/\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("注意"),s("strong",[this._v("这个命令的参数不是 secrets 引擎的类型，而是 secrets 引擎对应的路径")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"secrets-引擎是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#secrets-引擎是什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" secrets 引擎是什么？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上面提到，Vault 的行为类似于虚拟文件系统。"),s("code",[this._v("get/write/delete/list")]),this._v(" 操作被转发到相应的 secrets 引擎，secrets 引擎决定如何对这些操作作出反应。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"dynamic-secrets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-secrets","aria-hidden":"true"}},[this._v("#")]),this._v(" Dynamic Secrets")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("和 "),s("code",[this._v("kv")]),this._v(" secrets 不同的是，你不需要自己将数据放入存储中，"),s("strong",[this._v("Dynamic secrets 是在访问它们时生成的。Dynamic secrets 在被读取之前是不存在的，\n因此不存在有人窃取它们或其他客户使用相同 secrets 的风险")]),this._v("。由于 Vault 具有内置的撤销机制，Dynamic secrets 可以在使用后立即撤销，从而最小化了 secrets 存在的时间。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"启用-aws-secrets-引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启用-aws-secrets-引擎","aria-hidden":"true"}},[this._v("#")]),this._v(" 启用 AWS Secrets 引擎")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("AWS secrets 引擎不像 "),s("code",[this._v("kv")]),this._v(" secrets 引擎一样被默认启用，需要自己在使用前启用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("vault secrets "),s("span",{attrs:{class:"token function"}},[this._v("enable")]),this._v(" -path"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("aws aws\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"配置-aws-secrets-引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-aws-secrets-引擎","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置 AWS Secrets 引擎")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在启用 AWS secrets 引擎之后，必须将其配置为进行身份验证并与 AWS 进行通信。这需要特权帐户凭证。如果你不熟悉 AWS，请使用根帐户密钥（"),s("strong",[this._v("不要在生产环境下使用根帐户密钥")]),this._v("）。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault "),e("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" aws/config/root \\\n   access_key"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("AKIAI4SGLQPBX6CSENIQ \\\n   secret_key"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("z1Pdn06b3TnpG+9Gwj3ppPSOlAsu08Qw99PUW+eB\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Data written to: aws/config/root\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"创建-role"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-role","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建 "),s("code",[this._v("role")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("配置一个 "),s("code",[this._v("role")]),this._v("，Vault 中 "),s("code",[this._v("role")]),this._v(" 是对操作友好的标识符。把它看作一个符号链接。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 知道如何通过 AWS API 创建 IAM 用户，但是它不知道想要附加到该用户的权限、组和策略。这就是 "),s("code",[this._v("role")]),this._v(" 的作用—— "),s("code",[this._v("role")]),this._v(" 将你的配置选项映射到那些 API 调用。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"Version"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"2012-10-17"')]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"Statement"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{attrs:{class:"token string"}},[t._v('"Sid"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Stmt1426528957000"')]),t._v(",\n      "),e("span",{attrs:{class:"token string"}},[t._v('"Effect"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Allow"')]),t._v(",\n      "),e("span",{attrs:{class:"token string"}},[t._v('"Action"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"ec2:*"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n      "),e("span",{attrs:{class:"token string"}},[t._v('"Resource"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"*"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("如上所述，我们需要将这个策略文档映射到一个指定的 "),e("code",[t._v("role")]),t._v("。为此，向 "),e("code",[t._v("aws/roles/:name")]),t._v(" 这里 "),e("code",[t._v(":name")]),t._v(" 是描述角色的唯一名称(比如 "),e("code",[t._v("aws/roles/my-role")]),t._v("):")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault "),e("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" aws/roles/my-role policy"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("-"),e("span",{attrs:{class:"token operator"}},[t._v("<<")]),e("span",{attrs:{class:"token string"}},[t._v('EOF\n{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Sid": "Stmt1426528957000",\n      "Effect": "Allow",\n      "Action": [\n        "ec2:*"\n      ],\n      "Resource": [\n        "*"\n      ]\n    }\n  ]\n}\nEOF')]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Data written to: aws/roles/my-role\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"生成-secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成-secret","aria-hidden":"true"}},[this._v("#")]),this._v(" 生成 Secret")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("现在，AWS secrets 引擎已经启用并配置了一个 "),e("code",[t._v("role")]),t._v("，我们可以通过从 AWS "),e("code",[t._v("/creds/:name")]),t._v("（"),e("code",[t._v(":name")]),t._v(" 对应一个已经存在的 "),e("code",[t._v("role")]),t._v(" name）中读取来请求 Vault 为该 "),e("code",[t._v("role")]),t._v(" 生成一\n个访问密钥对:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("vault "),e("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" aws/creds/my-role\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\nKey                Value\n---                -----\nlease_id           aws/creds/my-role/0bce0782-32aa-25ec-f61d-c026ff22106e\nlease_duration     768h\nlease_renewable    "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\naccess_key         AKIAJELUDIANQGRXCTZQ\nsecret_key         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\nsecurity_token     "),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("nil"),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("code",[t._v("access key")]),t._v(" 和 "),e("code",[t._v("secret key")]),t._v(" 现在可以用于在 AWS 中执行任何 EC2 操作。注意，这些 "),e("code",[t._v("key")]),t._v(" 是新的，它们不是你先前输入的 "),e("code",[t._v("key")]),t._v(".\n如果你要再次运行该命令，你会得到一个新的访问密钥对。每次从 "),e("code",[t._v("aws/creds/:name")]),t._v(" 中读取数据时，Vault 就会连接到 aws 并生成一个新的 IAM 用户和密钥对。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("注意输出中的 "),s("code",[this._v("lease_id")]),this._v(" 字段。此值用于更新、撤销和检查。将此 "),s("code",[this._v("lease_id")]),this._v(" 复制到剪贴板。注意，"),s("code",[this._v("lease_id")]),this._v(" 是完整的路径，而不仅仅是末尾的 UUID。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"撤销-secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销-secret","aria-hidden":"true"}},[this._v("#")]),this._v(" 撤销 Secret")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 将在 768 小时后自动撤销此凭据(查看上面输出中的 "),s("code",[this._v("lease_duration")]),this._v(" 字段)，但我们可能希望尽早撤销它。一旦密钥被撤销，访问密钥就不再有效。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("若要撤消 Secret ，使用 "),s("code",[this._v("vault revoke")]),this._v(" 加上之前保存的 "),s("code",[this._v("lease_id")]),this._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault lease revoke aws/creds/my-role/0bce0782-32aa-25ec-f61d-c026ff22106\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Revoked lease: aws/creds/my-role/0bce0782-32aa-25ec-f61d-c026ff22106e\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"内置的帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置的帮助","aria-hidden":"true"}},[this._v("#")]),this._v(" 内置的帮助")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("你现在已经使用了 "),e("code",[t._v("vault write")]),t._v(" 和 "),e("code",[t._v("vault read")]),t._v(" 来处理多个路径:"),e("code",[t._v("kv")]),t._v(" secrets 引擎(带有 "),e("code",[t._v("kv/")]),t._v(")和 AWS secrets 引擎提供商(位于 "),e("code",[t._v("aws/")]),t._v(")的动态 AWS 证书。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在这两种情况下，每个 secrets 引擎的结构和用法都不同，例如 AWS 后端有一些特殊的路径，比如 "),s("code",[this._v("aws/config")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 有一个内置的帮助系统，而不是必须不断地记住或参考文档以确定使用什么路径。这个帮助系统可以通过 API 或命令行访问，并为任何路径生成可读的帮助。\n本小节假设你已经启用了 AWS secerts 引擎在 "),s("code",[this._v("aws/")]),this._v(" 路径上。使用 "),s("code",[this._v("vault path-help")]),this._v(" 命令：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault path-help aws\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("### DESCRIPTION")]),t._v("\n\nThe AWS backend dynamically generates AWS access keys "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a "),e("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" of\nIAM policies. The AWS access keys have a configurable lease "),e("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" and\nare automatically revoked at the end of the lease.\n\nAfter mounting this backend, credentials to generate IAM keys must\nbe configured with the "),e("span",{attrs:{class:"token string"}},[t._v('"root"')]),t._v(" path and policies must be written using\nthe "),e("span",{attrs:{class:"token string"}},[t._v('"roles/"')]),t._v(" endpoints before any access keys can be generated.\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("### PATHS")]),t._v("\n\nThe following paths are supported by this backend. To view "),e("span",{attrs:{class:"token function"}},[t._v("help")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v("\nany of the paths below, use the "),e("span",{attrs:{class:"token function"}},[t._v("help")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" with any route matching\nthe path pattern. Note that depending on the policy of your auth token,\nyou may or may not be able to access certain paths.\n\n    ^config/lease$\n        Configure the default lease information "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" generated credentials.\n\n    ^config/root$\n        Configure the root credentials that are used to manage IAM.\n\n    ^creds/"),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("?P"),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\\w+"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$\n        Generate an access key pair "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a specific role.\n\n    ^roles/"),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("?P"),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\\w+"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$\n        Read and "),e("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" IAM policies that access keys can be made for.\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("vault path-help")]),this._v(" 命令带上一个路径。指定 "),s("code",[this._v("root")]),this._v(" 路径，会获得 secrets 引擎的概述。\n注意，帮助不仅包含描述，还包含用于匹配该后端路由的精确正则表达式，以及关于路由的简要描述。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"路径帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径帮助","aria-hidden":"true"}},[this._v("#")]),this._v(" 路径帮助")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们可以通过为单个路径寻求帮助来继续深入研究。为此，只需使用 "),s("code",[this._v("vault path-help")]),this._v(" 提供与该路径的正则表达式匹配的路径。\n注意，这个路径实际上不需要是正确的。例如，我们将获得以下帮助来访问 "),s("code",[this._v("aws/creds/my-non-existent-role")]),this._v("，尽管我们从未创建过这个角色:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault path-help aws/creds/my-non-existent-role\n\nRequest:        creds/my-non-existent-role\nMatching Route: ^creds/"),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("?P"),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\\w"),e("span",{attrs:{class:"token punctuation"}},[t._v("((")]),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\w-."),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("+"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?\\w"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$\n\nGenerate an access key pair "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a specific role.\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("### PARAMETERS")]),t._v("\n\n    name "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Name of the role\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("### DESCRIPTION")]),t._v("\n\nThis path will generate a new, never before used key pair "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v("\naccessing AWS. The IAM policy used to back this key pair will be\nthe "),e("span",{attrs:{class:"token string"}},[t._v('"name"')]),t._v(" parameter. For example, "),e("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" this backend is mounted at "),e("span",{attrs:{class:"token string"}},[t._v('"aws"')]),t._v(",\n"),e("span",{attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"aws/creds/deploy"')]),t._v(" would generate access keys "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the "),e("span",{attrs:{class:"token string"}},[t._v('"deploy"')]),t._v(" role.\n\nThe access keys will have a lease associated with them. The access keys\ncan be revoked by using the lease ID.\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication","aria-hidden":"true"}},[this._v("#")]),this._v(" Authentication")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("到目前为止，我们还没有登录到 Vault。"),s("strong",[this._v("在 dev 模式下启动 Vault 服务器时，它会自动将你作为具有管理权限的根用户登录。\n在非 dev 设置中，必须首先进行身份验证")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 具有可插入的 "),s("code",[this._v("auth")]),this._v(" 方法，使用最适合你组织的任何形式的 Vault 很容易进行身份验证。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景","aria-hidden":"true"}},[this._v("#")]),this._v(" 背景")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("当用户对网站进行身份验证时，他们会输入用户名、密码，可能还有 2FA 码。这些信息是通过外部来源(很可能是数据库)进行验证的，网站会以成功或失败作为回应。\n成功后，网站还返回一个签名 "),e("code",[t._v("cookie")]),t._v("，其中包含唯一标识该会话用户的 "),e("code",[t._v("session id")]),t._v("。浏览器会自动将 "),e("code",[t._v("cookie")]),t._v(" 和 "),e("code",[t._v("session id")]),t._v(" 携带到将来的请求中，以便对用户进行身份验证。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 的行为非常相似，但它比标准网站更加灵活和可插入。Vault 支持许多不同的身份验证机制，但它们都汇入一个 "),s("code",[this._v("session token")]),this._v("，我们称之为 "),s("code",[this._v("Vault token")]),this._v("。\n身份验证就是用户或机器获取 Vault 令牌的过程。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tokens","aria-hidden":"true"}},[this._v("#")]),this._v(" Tokens")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("code",[t._v("Token")]),t._v(" 身份验证在 Vault 中默认启用，不能禁用。当使用 "),e("code",[t._v("vault server -dev")]),t._v("启动开发服务器时，它会打印出你的 "),e("code",[t._v("root token")]),t._v("。"),e("code",[t._v("root token")]),t._v(" 是配置 Vault 的初始访问令牌。\n它具有 root 权限，因此可以在 Vault 中执行任何操作。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault token create\n\nKey                  Value\n---                  -----\ntoken                8BveWcnoQUz8fLUzTyuu0YHv\ntoken_accessor       288UkgZjXvKPJHxR3QqzZOa4\ntoken_duration       âˆž\ntoken_renewable      "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\ntoken_policies       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"root"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nidentity_policies    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npolicies             "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"root"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("默认情况下，这将创建当前令牌的子令牌，并且继承所有相同策略。这里** "),s("code",[this._v("child")]),this._v(" 概念非常重要: 令牌总是有一个父令牌，当父令牌被撤销时，子令牌也可以在同一个操作中全部被撤销。\n这使得在删除用户访问权限时很容易，也可以删除用户创建的所有子令牌的访问权限**。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("token")]),this._v(" 验证：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault login rXURJUktdBdlgeOG5xkh8jAW\n\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" You are now authenticated. The token information displayed below\nis already stored "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the token helper. You "),e("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v(" NOT need to run "),e("span",{attrs:{class:"token string"}},[t._v('"vault login"')]),t._v("\nagain. Future Vault requests will automatically use this token.\n\nKey                  Value\n---                  -----\ntoken                rXURJUktdBdlgeOG5xkh8jAW\ntoken_accessor       4QCLf891dUg26EzTgbrHQIWS\ntoken_duration       âˆž\ntoken_renewable      "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\ntoken_policies       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"root"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nidentity_policies    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npolicies             "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"root"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("token")]),this._v(" 验证，它会验证令牌，并让你知道该令牌与什么访问策略相关联。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault token revoke 8BveWcnoQUz8fLUzTyuu0YHv\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Revoked token "),s("span",{attrs:{class:"token punctuation"}},[this._v("(")]),this._v("if it existed"),s("span",{attrs:{class:"token punctuation"}},[this._v(")")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("vault lease revoke")]),this._v(" 只能用于撤销 "),s("code",[this._v("lease")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ vault login $VAULT_DEV_ROOT_TOKEN_ID\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"推荐模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推荐模式","aria-hidden":"true"}},[this._v("#")]),this._v(" 推荐模式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("实际上，操作人员不应该使用 "),s("code",[this._v("token create")]),this._v(" 命令为用户或机器生成 Vault token。用户或机器应该使用 Vault 配置的 "),s("code",[this._v("auth")]),this._v(" 方法(如 GitHub、LDAP、AppRole 等)\n进行 Vault 身份验证。对于不能生成自己的令牌的遗留应用程序，操作人员可能需要提前创建令牌。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"auth-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auth-methods","aria-hidden":"true"}},[this._v("#")]),this._v(" Auth Methods")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("Vault 支持许多 "),e("code",[t._v("auth")]),t._v(" 方法，但是在使用之前必须启用它们。"),e("code",[t._v("auth")]),t._v(" 方法提供了灵活性。启用和配置 "),e("code",[t._v("auth")]),t._v(" 方法通常由 Vault 操作人员或安全团队执行。\n作为一个以人为中心的 "),e("code",[t._v("auth")]),t._v(" 方法的示例，让我们通过 GitHub 进行身份验证。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("首先，启用 GitHub "),s("code",[this._v("auth")]),this._v("方法：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault auth "),s("span",{attrs:{class:"token function"}},[this._v("enable")]),this._v(" -path"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("github github\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Enabled github auth method at: github/\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("和 secrets 引擎一样，"),s("code",[this._v("auth")]),this._v(" 方法默认以其 TYPE 作为 PATH，因此 "),s("code",[this._v("vault auth enable github")]),this._v(" 与上面的命令是等价的。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("与在根路由器上启用的 secrets 引擎不同，"),e("code",[t._v("auth")]),t._v(" 方法总是以 "),e("code",[t._v("auth/")]),t._v(" 作为前缀。因此，我们刚刚启用的 GitHub "),e("code",[t._v("auth")]),t._v(" 方法可以在 "),e("code",[t._v("auth/github")]),t._v(" 上访问。\n另一个例子：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault auth "),s("span",{attrs:{class:"token function"}},[this._v("enable")]),this._v(" -path"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("my-github github\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Enabled github auth method at: my-github/\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这样就可以在 "),s("code",[this._v("auth/my-github")]),this._v(" 上访问 GitHub 的 "),s("code",[this._v("auth")]),this._v(" 方法。使用 "),s("code",[this._v("ault path-help")]),this._v(" 了解更多关于路径的信息。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接下来，配置 GitHub "),s("code",[this._v("auth")]),this._v(" 方法。每个 "),s("code",[this._v("auth")]),this._v(" 方法都有不同的配置选项，所以详细信息请参阅文档。在这种情况下，最小的配置集是将团队映射到策略。\n对于 GitHub，我们告诉它哪些组织用户必须是它的一部分，并将团队映射到策略")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault "),e("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" auth/github/config organization"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("hashicorp\n\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Data written to: auth/github/config\n\n$ vault "),e("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" auth/github/map/teams/my-team value"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("default,my-policy\n\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Data written to: auth/github/map/teams/my-team\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("第一个命令配置 Vault 从 GitHub 上的 "),e("code",[t._v("hashicorp")]),t._v(" 组织中拉去身份验证数据。下一个命令告诉 Vault 映射 "),e("code",[t._v("my-team")]),t._v("团队中(在 "),e("code",[t._v("hashicorp")]),t._v(" 组织中)的任何用户，\n以映射到策略 "),e("code",[t._v("default")]),t._v(" 和 "),e("code",[t._v("my-policy")]),t._v("。这些策略还不需要存在于系统中—— Vault 在登录时只会发出警告。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("作为用户，可能希望找到启用和可用的 "),s("code",[this._v("auth")]),this._v(" 方法：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault auth list\n\nPath          Type      Accessor                Description\n----          ----      --------                -----------\ngithub/       github    auth_github_4e694978    n/a\nmy-github/    github    auth_github_2a45ccd0    n/a\ntoken/        token     auth_token_5edaec25     token based credentials\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("要了解更多关于如何通过 CLI 对特定 "),e("code",[t._v("auth")]),t._v(" 方法进行身份验证的信息，使用 "),e("code",[t._v("vault auth help")]),t._v(" 命令和 "),e("code",[t._v("auth")]),t._v(" 方法的 "),e("code",[t._v("PATH")]),t._v(" 或 "),e("code",[t._v("TYPE")]),t._v(" 一起使用：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault auth "),e("span",{attrs:{class:"token function"}},[t._v("help")]),t._v(" github\n\nUsage: vault login -method"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("github "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CONFIG K"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("V"),e("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  The GitHub auth method allows "),e("span",{attrs:{class:"token function"}},[t._v("users")]),t._v(" to authenticate using a GitHub\n  personal access token. Users can generate a personal access token from the\n  settings page on their GitHub account.\n\n  Authenticate using a GitHub token:\n\n      $ vault login -method"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("github token"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("abcd1234\n\nConfiguration:\n\n  mount"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      Path where the GitHub credential method is mounted. This is usually\n      provided via the -path flag "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),e("span",{attrs:{class:"token string"}},[t._v('"vault login"')]),t._v(" command, but it can be\n      specified here as well. If specified here, it takes precedence over the\n      value "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" -path. The default value is "),e("span",{attrs:{class:"token string"}},[t._v('"github"')]),e("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n\n  token"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      GitHub personal access token to use "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" authentication. If not provided,\n      Vault will prompt "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the value.\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("可以获得 CLI "),s("code",[this._v("auth")]),this._v("方法的帮助信息：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault auth "),s("span",{attrs:{class:"token function"}},[this._v("help")]),this._v(" aws\n\n$ vault auth "),s("span",{attrs:{class:"token function"}},[this._v("help")]),this._v(" userpass\n\n$ vault auth "),s("span",{attrs:{class:"token function"}},[this._v("help")]),this._v(" token\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault login -method"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("github\n\nGitHub Personal Access Token "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("will be hidden"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" You are now authenticated. The token information displayed below\nis already stored "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the token helper. You "),e("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v(" NOT need to run "),e("span",{attrs:{class:"token string"}},[t._v('"vault login"')]),t._v("\nagain. Future Vault requests will automatically use this token.\n\nKey                    Value\n---                    -----\ntoken                  7efb3969-8743-880f-e234-afca6e12d790\ntoken_accessor         f7bfb6a3-c41e-eb87-5317-88a0aad200ae\ntoken_duration         768h\ntoken_renewable        "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\ntoken_policies         "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("default my-policy"),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntoken_meta_org         hashicorp\ntoken_meta_username    my-user\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如输出所示，Vault 已经在令牌助手中保存了生成的令牌，因此不需要再次运 "),s("code",[this._v("vault login")]),this._v("。但是，我们刚刚创建的这个新用户在 Vault 中没有很多权限。\n继续使用 root token 重新进行身份验证:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault login "),s("span",{attrs:{class:"token operator"}},[this._v("<")]),this._v("initial-root-token"),s("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用带有 "),s("code",[this._v("-mode")]),this._v(" 参数的 "),s("code",[this._v("vault token revoke")]),this._v(" 从 "),s("code",[this._v("auth")]),this._v(" 方法中撤销任何登录：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault token revoke -mode path auth/github\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("或者，禁用 GitHub "),s("code",[this._v("auth")]),this._v(" 方法：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault auth disable github\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Disabled the auth method "),s("span",{attrs:{class:"token punctuation"}},[this._v("(")]),this._v("if it existed"),s("span",{attrs:{class:"token punctuation"}},[this._v(")")]),this._v(" at: github/\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这也会撤销该 "),s("code",[this._v("auth")]),this._v(" 方法的任何登录。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"policies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#policies","aria-hidden":"true"}},[this._v("#")]),this._v(" Policies")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 的策略控制用户可以访问的内容。在上一节中，我们了解了身份验证( "),s("code",[this._v("authentication")]),this._v(" )。这一部分是关于授权( "),s("code",[this._v("authorization")]),this._v(" )的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于身份验证，Vault 可以启用和使用多个选项或方法。Vault 对于授权和策略总是使用相同的格式。所有 "),s("code",[this._v("auth")]),this._v(" 方法都将身份映射回 Vault 配置的核心策略。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("一些内置的策略不能撤销。例如，"),e("code",[t._v("root")]),t._v(" 和 "),e("code",[t._v("default")]),t._v(" 策略是必需的策略，不能删除。"),e("strong",[e("code",[t._v("default")]),t._v(" 策略提供一组公共权限，默认情况下包含在所有令牌上。\n"),e("code",[t._v("root")]),t._v(" 策略提供一个令牌超级管理员权限")]),t._v("，类似于 linux 机器上的 "),e("code",[t._v("root")]),t._v(" 用户。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"策略格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#策略格式","aria-hidden":"true"}},[this._v("#")]),this._v(" 策略格式")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token comment"}},[t._v("# Normal servers have version 1 of KV mounted by default, so will need these")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("# paths:")]),t._v("\npath "),e("span",{attrs:{class:"token string"}},[t._v('"secret/*"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  capabilities "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"create"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\npath "),e("span",{attrs:{class:"token string"}},[t._v('"secret/foo"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  capabilities "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"read"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# Dev servers have version 2 of KV mounted by default, so will need these")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("# paths:")]),t._v("\npath "),e("span",{attrs:{class:"token string"}},[t._v('"secret/data/*"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  capabilities "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"create"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\npath "),e("span",{attrs:{class:"token string"}},[t._v('"secret/data/foo"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  capabilities "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"read"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("有了这个策略，用户可以将任何 secrets 写入 "),s("code",[this._v("secret/")]),this._v("，但 "),s("code",[this._v("secret/foo")]),this._v(" 除外，因为只有读访问是允许的。策略默认拒绝，因此不允许对未指定路径的任何访问。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault policy "),s("span",{attrs:{class:"token function"}},[this._v("fmt")]),this._v(" my-policy.hcl\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("由于 Vault 中的所有内容都必须通过 API 访问，因此这对 Vault 的每个方面都有严格的控制，包括启用 secrets 引擎、启用 "),s("code",[this._v("auth")]),this._v(" 方法、身份验证以及访问 secrets。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"编写策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 编写策略")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault policy "),s("span",{attrs:{class:"token function"}},[this._v("write")]),this._v(" my-policy my-policy.hcl\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Uploaded policy: my-policy\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault policy "),s("span",{attrs:{class:"token function"}},[this._v("write")]),this._v(" my-policy -"),s("span",{attrs:{class:"token operator"}},[this._v("<<")]),s("span",{attrs:{class:"token string"}},[this._v('EOF\n# Normal servers have version 1 of KV mounted by default, so will need these\n# paths:\npath "secret/*" {\n  capabilities = ["create"]\n}\npath "secret/foo" {\n  capabilities = ["read"]\n}\n\n# Dev servers have version 2 of KV mounted by default, so will need these\n# paths:\npath "secret/data/*" {\n  capabilities = ["create"]\n}\npath "secret/data/foo" {\n  capabilities = ["read"]\n}\nEOF')]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault policy list\n\ndefault\nmy-policy\nroot\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault policy "),e("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" my-policy\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# Normal servers have version 1 of KV mounted by default, so will need these")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("# paths:")]),t._v("\npath "),e("span",{attrs:{class:"token string"}},[t._v('"secret/*"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  capabilities "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"create"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"测试策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 测试策略")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault token create -policy"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("my-policy\n\nKey                  Value\n---                  -----\ntoken                Cdjlq3aR5XhfoWPLEzmwD1qL\ntoken_accessor       3u0AvC7P3vyuBjqZKpgERuvk\ntoken_duration       768h\ntoken_renewable      "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\ntoken_policies       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"default"')]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"my-policy"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nidentity_policies    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npolicies             "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"default"')]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"my-policy"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n$ vault login Cdjlq3aR5XhfoWPLEzmwD1qL\n\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" You are now authenticated. The token information displayed below\nis already stored "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the token helper. You "),e("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v(" NOT need to run "),e("span",{attrs:{class:"token string"}},[t._v('"vault login"')]),t._v("\nagain. Future Vault requests will automatically use this token.\n\nKey                  Value\n---                  -----\ntoken                Cdjlq3aR5XhfoWPLEzmwD1qL\ntoken_accessor       3u0AvC7P3vyuBjqZKpgERuvk\ntoken_duration       767h59m5s\ntoken_renewable      "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\ntoken_policies       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"default"')]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"my-policy"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nidentity_policies    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npolicies             "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"default"')]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"my-policy"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("验证可以向 "),s("code",[this._v("secret/")]),this._v(" 写入任何数据，但只能从 "),s("code",[this._v("secret/foo")]),this._v(" 读取:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"dev-servers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dev-servers","aria-hidden":"true"}},[this._v("#")]),this._v(" Dev servers")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault kv put secret/bar robot"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("beepboop\n\nKey              Value\n---              -----\ncreated_time     2018-11-01T02:55:34.721929175Z\ndeletion_time    n/a\ndestroyed        "),s("span",{attrs:{class:"token boolean"}},[this._v("false")]),this._v("\nversion          1\n\n$ vault kv put secret/foo robot"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("beepboop\n\nError writing data to secret/data/foo: Error making API request.\n\nURL: PUT http://127.0.0.1:8200/v1/secret/data/foo\nCode: 403. Errors:\n\n* permission denied\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"non-dev-servers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#non-dev-servers","aria-hidden":"true"}},[this._v("#")]),this._v(" Non-dev servers")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault kv put secret/bar robot"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("beepboop\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Data written to: secret/bar\n\n$ vault kv put secret/foo robot"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("beepboop\n\nError writing data to secret/foo: Error making API request.\n\nURL: PUT http://127.0.0.1:8200/v1/secret/foo\nCode: 403. Errors:\n\n* permission denied\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"映射策略到-auth-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#映射策略到-auth-方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 映射策略到 "),s("code",[this._v("auth")]),this._v(" 方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 本身是单个策略权限，与身份验证不同，你可以在身份验证中启用多个 "),s("code",[this._v("auth")]),this._v(" 方法。任何启用的 "),s("code",[this._v("auth")]),this._v(" 方法都必须将身份映射到这些核心策略。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("在 "),e("code",[t._v("auth")]),t._v(" 方法中使用 "),e("code",[t._v("vault path-help")]),t._v(" 系统来确定映射是如何完成的，因为它是特定于每个 "),e("code",[t._v("auth")]),t._v(" 方法的。例如，使用 GitHub，每个团队使用 "),e("code",[t._v("map/teams/<team>")]),t._v(" 路径完成：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault "),s("span",{attrs:{class:"token function"}},[this._v("write")]),this._v(" auth/github/map/teams/default value"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("my-policy\n\nSuccess"),s("span",{attrs:{class:"token operator"}},[this._v("!")]),this._v(" Data written to: auth/github/map/teams/default\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"部署-vault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署-vault","aria-hidden":"true"}},[this._v("#")]),this._v(" 部署 Vault")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"配置-vault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-vault","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置 Vault")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("storage "),e("span",{attrs:{class:"token string"}},[t._v('"consul"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  address "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"127.0.0.1:8500"')]),t._v("\n  path    "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"vault/"')]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlistener "),e("span",{attrs:{class:"token string"}},[t._v('"tcp"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n address     "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"127.0.0.1:8200"')]),t._v("\n tls_disable "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 1\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("li",[e("code",[t._v("listener")]),t._v(" - 一个或多个侦听器决定 Vault 如何侦听 API 请求。上面的示例在没有 "),e("code",[t._v("TLS")]),t._v(" 的情况下监听 "),e("code",[t._v("localhost")]),t._v(" 端口 "),e("code",[t._v("8200")]),t._v("。设置环境变量 "),e("code",[t._v("VAULT_ADDR=http://127.0.0.1:8200")]),t._v("，\n以便 VAULT 客户端在没有 TLS 的情况下连接。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在，将上面的配置复制粘贴到一个名为 "),s("code",[this._v("config.hcl")]),this._v(" 的文件中。它将配置 Vault，并期望一个 Consul 实例在本地运行。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ consul agent -dev\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"启动-server-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-server-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 启动 server")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("配置好以后，启动服务器配合 "),s("code",[this._v("-config")]),this._v(" 标志，指向配置的正确路径：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault server -config"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("config.hcl\n\n"),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Vault server configuration:\n\n         Log Level: info\n           Storage: consul\n        Listener 1: tcp "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addr: "),e("span",{attrs:{class:"token string"}},[t._v('"127.0.0.1:8200"')]),t._v(", tls: "),e("span",{attrs:{class:"token string"}},[t._v('"disabled"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{attrs:{class:"token operator"}},[t._v("==")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Vault server started"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" Log data will stream "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" below:\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Vault 输出一些关于其配置的信息，然后阻塞。这个过程应该使用资源管理器(如 "),s("code",[this._v("systemd")]),this._v(" 或 "),s("code",[this._v("upstart")]),this._v(")运行。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault server -config"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("example.hcl\n\nError initializing core: Failed to lock memory: cannot allocate memory\n\nThis usually means that the mlock syscall is not available.\nVault uses mlock to prevent memory from being swapped to\ndisk. This requires root privileges as well as a machine\nthat supports mlock. Please "),e("span",{attrs:{class:"token function"}},[t._v("enable")]),t._v(" mlock on your system or\ndisable Vault from using it. To disable Vault from using it,\n"),e("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" the "),e("span",{attrs:{class:"token variable"}},[e("span",{attrs:{class:"token variable"}},[t._v("`")]),t._v("disable_mlock"),e("span",{attrs:{class:"token variable"}},[t._v("`")])]),t._v(" configuration option "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" your configuration\nfile.\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"初始化-vault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化-vault","aria-hidden":"true"}},[this._v("#")]),this._v(" 初始化 Vault")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在初始化过程中，生成加密密钥，创建解锁密钥，并设置初始 "),s("code",[this._v("root token")]),this._v("。要初始化 Vault，使用 "),s("code",[this._v("vault operator init")]),this._v(" 初始化 Vault。\n这是一个没有验证的请求，但它只适用于没有数据的新的 Vault:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault operator init\n\nUnseal Key 1: E4GnjX+VP9G50uWQNcwpCflzGAMKGR38BbQywgq4I6L8\nUnseal Key 2: PYMxcCOswEYMNz7N6UW53Up6nu6y+SjAPwTJOTtkju3d\nUnseal Key 3: yuJ5cSxC7tSBR5mMVJ/WJ9bfhhfGb+uwWw9FQR0JKILh\nUnseal Key 4: 0vdvEFHM9PHEGMctJrl2ylHqoKQK8DLkfMU6ntmDz6jv\nUnseal Key 5: cI8yglWJX+jPf/yQG7Sg6SPWzy0WyrBPvaFTOAYkPJTx\n\nInitial Root Token: 62421926-81b9-b202-86f8-8850176c0cf3\n\nVault initialized with 5 key shares and a key threshold of 3. Please securely\ndistribute the key shares printed above. When the Vault is re-sealed,\nrestarted, or stopped, you must supply at least 3 of these keys to unseal it\nbefore it can start servicing requests.\n\nVault does not store the generated master key. Without at least 3 key to\nreconstruct the master key, Vault will remain permanently sealed"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\nIt is possible to generate new unseal keys, provided you have a quorum of\nexisting unseal keys shares. See "),e("span",{attrs:{class:"token string"}},[t._v('"vault operator rekey"')]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("more")]),t._v(" information.\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"seal-unseal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seal-unseal","aria-hidden":"true"}},[this._v("#")]),this._v(" Seal/Unseal")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("每次 Vault 启动的时候都会解封。它可以通过 API 和命令行完成。要解封 Vault，你必须有阈值数的 "),s("code",[this._v("unseal keys")]),this._v("。上面的输出中，注意到 "),s("code",[this._v("key threshold")]),this._v(" 是 3。\n这意味着要解封 Vault，需要已经生成的 5 个 "),s("code",[this._v("unseal key")]),this._v(" 中的 3 个。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault operator unseal\n\nUnseal Key "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("will be hidden"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\nKey                Value\n---                -----\nSealed             "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nTotal Shares       5\nUnseal Progress    1/3\nUnseal Nonce       786e7190-d1e2-84d2-520c-022efee5b71e\nVersion            "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("version unknown"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nHA Enabled         "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nHA Mode            sealed\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在粘贴一个有效的密钥并确认之后，看到 Vault 仍然是密封的，但是已经取得了进展。Vault 知道它已经有了 3 个钥匙中的 1 个。由于算法的性质，\nVault 在达到阈值之前不知道它是否有正确的 "),s("code",[this._v("key")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("还要注意，解封过程是有状态的。你可以到另一台计算机，使用 "),s("code",[this._v("vault operator unseal")]),this._v("，只要它指向同一个服务器，其他计算机就可以继续解锁过程。\n这对于开启过程的设计是非常重要的: 解封 Vault 需要多个人带着多把钥匙。Vault 可以从多台电脑上打开，钥匙永远不应该放在一起。一个恶意操作没有足够的 "),s("code",[this._v("key")]),this._v(" 来进行。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("继续使用 "),e("code",[t._v("vault operator unseal")]),t._v("解封 Vault。要解封 Vault，你必须使用三个不同的 "),e("code",[t._v("key")]),t._v("，相同的 "),e("code",[t._v("key")]),t._v(" 重复将不起作用。当使用 "),e("code",[t._v("key")]),t._v(" 时，只要它们是正确的，\n很快就会看到这样的输出：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault operator unseal\n\nUnseal Key "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("will be hidden"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n"),e("span",{attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n\n$ vault operator unseal\n\nUnseal Key "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("will be hidden"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n"),e("span",{attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当 "),s("code",[this._v("Sealed")]),this._v(" 的值变成了 "),s("code",[this._v("false")]),this._v("，Vault 就被解封了：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("Key             Value\n---             -----\nSealed          "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("--\nTotal Shares    5\nVersion         "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("version unknown"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCluster Name    vault-cluster-8a8b2c36\nCluster ID      34e94a2e-2d8f-c7cc-271d-96fd438ccc6d\nHA Enabled      "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nHA Mode         standby\nHA Cluster      n/a\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("最后，验证 "),s("code",[this._v("root token")]),this._v("(和 "),s("code",[this._v("unseal key")]),this._v(" 都在输出中):")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ vault login 14d1316e-78f6-910b-a4cc-9ba6697ec814\n\nSuccess"),e("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" You are now authenticated. The token information displayed below\nis already stored "),e("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the token helper. You "),e("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v(" NOT need to run "),e("span",{attrs:{class:"token string"}},[t._v('"vault login"')]),t._v("\nagain. Future Vault requests will automatically use this token.\n\nKey                Value\n---                -----\ntoken              14d1316e-78f6-910b-a4cc-9ba6697ec814\ntoken_accessor     a8bbcc57-9be6-6584-a7a6-46290962fd33\ntoken_duration     â\ntoken_renewable    "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\ntoken_policies     "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("root")]),this._v(" 用户可以使用 "),s("code",[this._v("vault operator seal")]),this._v(" 重新密封 Vault。如果重新密封 Vault，那么它会从内存中清除所有状态(包括加密密钥)。Vault 是安全的，并锁住访问。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"使用带有身份验证的-http-apis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用带有身份验证的-http-apis","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用带有身份验证的 HTTP APIs")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://127.0.0.1:8200/v1/sys/init\n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token string"}},[t._v('"initialized"')]),t._v(":true"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"通过-rest-apis-访问-secrets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-rest-apis-访问-secrets","aria-hidden":"true"}},[this._v("#")]),this._v(" 通过 REST APIs 访问 secrets")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这里的例子没有启用 "),s("code",[this._v("TLS")]),this._v("，但是在生产环境下，"),s("code",[this._v("TLS")]),this._v(" 不应该被禁用。保存下面的内容到 "),s("code",[this._v("config.hcl")]),this._v("，并且启动 Vault server：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token comment"}},[t._v("# 基于文件")]),t._v("\nbackend "),e("span",{attrs:{class:"token string"}},[t._v('"file"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"vault"')]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlistener "),e("span",{attrs:{class:"token string"}},[t._v('"tcp"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tls_disable "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 1\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ vault server -config"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v("config.hcl\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --request POST \\\n    --data "),e("span",{attrs:{class:"token string"}},[t._v('\'{"secret_shares": 1, "secret_threshold": 1}\'')]),t._v(" \\\n    http://127.0.0.1:8200/v1/sys/init\n\n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"keys"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"373d500274dd8eb95271cb0f868e4ded27d9afa205d1741d60bb97cd7ce2fe41"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"keys_base64"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"Nz1QAnTdjrlSccsPho5N7SfZr6IF0XQdYLuXzXzi/kE="')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"root_token"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"6fa4128e-8bd2-fd02-0ea8-a5e020d9b766"')]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("这个响应包含我们的 "),e("code",[t._v("root token")]),t._v(" 和 "),e("code",[t._v("unseal key")]),t._v("。可以使用 "),e("code",[t._v("unseal key")]),t._v(" 来解封 Vault，并使用 "),e("code",[t._v("root token")]),t._v(" 在 Vault 中执行其他需要身份验证的请求。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为了方便我们把 "),s("code",[this._v("root token")]),this._v(" 保存到环境变量 "),s("code",[this._v("export VAULT_TOKEN=6fa4128e-8bd2-fd02-0ea8-a5e020d9b766")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("unseal key")]),this._v(" 通过 API 来解封 Vault：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --request POST \\\n    --data "),e("span",{attrs:{class:"token string"}},[t._v('\'{"key": "Nz1QAnTdjrlSccsPho5N7SfZr6IF0XQdYLuXzXzi/kE="}\'')]),t._v(" \\\n    http://127.0.0.1:8200/v1/sys/unseal\n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"sealed"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" false,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"t"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"n"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"progress"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 0,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"nonce"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('""')]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"version"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"1.2.3"')]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"cluster_name"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"vault-cluster-9d524900"')]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"cluster_id"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"d69ab1b0-7e9a-2523-0d05-b0bfd09caeea"')]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --header "),e("span",{attrs:{class:"token string"}},[t._v('"X-Vault-Token: '),e("span",{attrs:{class:"token variable"}},[t._v("$VAULT_TOKEN")]),t._v('"')]),t._v(" \\\n    --request POST \\\n    --data "),e("span",{attrs:{class:"token string"}},[t._v('\'{"type": "approle"}\'')]),t._v(" \\\n    http://127.0.0.1:8200/v1/sys/auth/approle\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("注意，启用 AppRole 端点的请求需要一个身份验证令牌。在本例中，我们将传递启动 Vault 服务器时生成的 "),s("code",[this._v("root token")]),this._v("。我们还可以\n使用任何其他身份验证机制生成令牌，但为了简单起见，我们将使用 "),s("code",[this._v("root token")]),this._v("。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --header "),e("span",{attrs:{class:"token string"}},[t._v('"X-Vault-Token: '),e("span",{attrs:{class:"token variable"}},[t._v("$VAULT_TOKEN")]),t._v('"')]),t._v(" \\\n    --request POST \\\n    --data "),e("span",{attrs:{class:"token string"}},[t._v('\'{"policies": ["dev-policy", "my-policy"]}\'')]),t._v(" \\\n    http://127.0.0.1:8200/v1/auth/approle/role/my-role\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("在默认配置中，AppRole 后端需要两个很难猜到的凭证，一个 "),e("code",[t._v("role ID")]),t._v(" 和一个 "),e("code",[t._v("secret ID")]),t._v("。获取 "),e("code",[t._v("my-role")]),t._v(" 的 "),e("code",[t._v("role ID")]),t._v("：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --header "),e("span",{attrs:{class:"token string"}},[t._v('"X-Vault-Token: '),e("span",{attrs:{class:"token variable"}},[t._v("$VAULT_TOKEN")]),t._v('"')]),t._v(" \\\n     http://127.0.0.1:8200/v1/auth/approle/role/my-role/role-id\n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"data"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token string"}},[t._v('"role_id"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"86a32a73-1f2b-05e0-113a-dfa930145d72"')]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("创建 "),s("code",[this._v("my-role")]),this._v(" 的 "),s("code",[this._v("secret ID")]),this._v("：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --header "),e("span",{attrs:{class:"token string"}},[t._v('"X-Vault-Token: '),e("span",{attrs:{class:"token variable"}},[t._v("$VAULT_TOKEN")]),t._v('"')]),t._v(" \\\n    --request POST \\\n    http://127.0.0.1:8200/v1/auth/approle/role/my-role/secret-id\n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"data"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token string"}},[t._v('"secret_id"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"cd4b2002-3e3b-aceb-378d-5caa84dffd14"')]),t._v(",\n    "),e("span",{attrs:{class:"token string"}},[t._v('"secret_id_accessor"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"6b9b58f6-d11a-c73c-ffa8-04a47d42716b"')]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这两个凭证可以提供给 "),s("code",[this._v("login")]),this._v(" 端点以获取新的 Vault 令牌。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --request POST \\\n    --data "),e("span",{attrs:{class:"token string"}},[t._v('\'{"role_id": "86a32a73-1f2b-05e0-113a-dfa930145d72", "secret_id": "cd4b2002-3e3b-aceb-378d-5caa84dffd14"}\'')]),t._v(" \\\n    http://127.0.0.1:8200/v1/auth/approle/login\n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"auth"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token string"}},[t._v('"client_token"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"50617721-dfb5-1916-7b13-4091e169d28c"')]),t._v(",\n    "),e("span",{attrs:{class:"token string"}},[t._v('"accessor"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"ada8d354-47c0-5d9e-50f9-d74e6de2df9b"')]),t._v(",\n    "),e("span",{attrs:{class:"token string"}},[t._v('"policies"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"default"')]),t._v(", "),e("span",{attrs:{class:"token string"}},[t._v('"dev-policy"')]),t._v(", "),e("span",{attrs:{class:"token string"}},[t._v('"my-policy"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n    "),e("span",{attrs:{class:"token string"}},[t._v('"metadata"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{attrs:{class:"token string"}},[t._v('"role_name"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"my-role"')]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),e("span",{attrs:{class:"token string"}},[t._v('"lease_duration"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 2764800,\n    "),e("span",{attrs:{class:"token string"}},[t._v('"renewable"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("这个 "),e("code",[t._v("client_token")]),t._v(" 可以用作 Vault 的身份验证。这个令牌将被授权使用 "),e("code",[t._v("default")]),t._v(","),e("code",[t._v("dev-policy")]),t._v(" 和 "),e("code",[t._v("my-policy")]),t._v(" 策略所包含的所有资源的特定功能。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{attrs:{class:"token function"}},[t._v("export")]),t._v(" VAULT_TOKEN"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"50617721-dfb5-1916-7b13-4091e169d28c"')]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 写入新的secret foo")]),t._v("\n$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --header "),e("span",{attrs:{class:"token string"}},[t._v('"X-Vault-Token: '),e("span",{attrs:{class:"token variable"}},[t._v("$VAULT_TOKEN")]),t._v('"')]),t._v(" \\\n    --request POST \\\n    --data "),e("span",{attrs:{class:"token string"}},[t._v('\'{"bar": "baz"}\'')]),t._v(" \\\n    http://127.0.0.1:8200/v1/secret/foo\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# 读取 foo")]),t._v("\n$ "),e("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n    --header "),e("span",{attrs:{class:"token string"}},[t._v('"X-Vault-Token: '),e("span",{attrs:{class:"token variable"}},[t._v("$VAULT_TOKEN")]),t._v('"')]),t._v(" \\\n    http://127.0.0.1:8200/v1/secret/foo\n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token string"}},[t._v('"data"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token string"}},[t._v('"bar"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"baz"')]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),e("span",{attrs:{class:"token string"}},[t._v('"lease_duration"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 2764800,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"renewable"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" false,\n  "),e("span",{attrs:{class:"token string"}},[t._v('"request_id"')]),e("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"5e246671-ec05-6fc8-9f93-4fe4512f34ab"')]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"web-ui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-ui","aria-hidden":"true"}},[this._v("#")]),this._v(" Web UI")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"dev-servers-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dev-servers-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Dev servers")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当你在 dev 模式下启动 Vault server 时，Vault UI 会自动启用。在浏览器输入 "),s("code",[this._v("http://127.0.0.1:8200/ui")]),this._v(" 来访问。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"non-dev-servers-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#non-dev-servers-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Non-Dev servers")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在非 dev 模式下，Vault UI 默认是不启用的。要启用 Vault UI，需要在 Vault 配置文件中设置 "),s("code",[this._v("ui")]),this._v(" 选项。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('ui = true\n\nlistener "tcp" {\n  # ...\n}\n\nstorage "consul" {\n  # ...\n}\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('ui = true\n\nlistener "tcp" {\n  address = "10.0.1.35:8200"\n\n  # If bound to localhost, the Vault UI is only\n  # accessible from the local machine!\n  # address = "127.0.0.1:8200"\n}\n...\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在这个例子中，可以从子网上的任何机器(假设没有网络防火墙)访问以下 URL: "),s("code",[this._v("https://10.0.1.35:8200/ui")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"web-ui-wizard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-ui-wizard","aria-hidden":"true"}},[this._v("#")]),this._v(" Web UI Wizard")])}],!1,null,null,null);n.options.__file="README.md";s.default=n.exports}}]);